# Title: Tezos Baker Registry
# Author: Teckhua Chiang
# Company: Cryptonomic Inc.

parameter
  (or :_entries
     (string %_Liq_entry_updateName)
     (or (address %_Liq_entry_updatePaymentAddress)
         (or (pair %_Liq_entry_updateTerms int (pair int mutez))
             (unit %_Liq_entry_deleteRegistration))));
storage
  (pair :storage
     (map %recordsOfNameAndPaymentAddress
        address
        (pair :recordOfNameAndPaymentAddress (string %name) (address %paymentAddress)))
     (pair (map %recordsOfFeeAndMinimum
              address
              (map int (pair :recordOfFeeAndMinimum (int %fee) (mutez %minimum))))
           (string %stamp)));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT
         { RENAME @name_slash_3 ;
           DUUUP @storage ;
           SENDER @sender ;
           DUUP @storage ;
           CDR ;
           DUUUP @storage ;
           CAR %recordsOfNameAndPaymentAddress ;
           DUUUUP @storage ;
           CAR %recordsOfNameAndPaymentAddress ;
           DUUUUP @sender ;
           GET ;
           IF_NONE { DUUUP @sender ; PUSH string "" ; PAIR %name %paymentAddress } {} ;
           RENAME @recordOfNameAndPaymentAddress ;
           CDR %paymentAddress ;
           DUUUUUUP @name ;
           PAIR @newRecordOfNameAndPaymentAddress %name %paymentAddress ;
           DUUUUP @sender ;
           DIP { SOME } ;
           DIIIIP { DROP ; DROP ; DROP } ;
           UPDATE ;
           PAIR @storage %recordsOfNameAndPaymentAddress ;
           NIL operation ;
           PAIR }
         { IF_LEFT
             { RENAME @paymentAddress_slash_10 ;
               DUUUP @storage ;
               SENDER @sender ;
               DUUP @storage ;
               CDR ;
               DUUUP @storage ;
               CAR %recordsOfNameAndPaymentAddress ;
               DUUUUP @storage ;
               CAR %recordsOfNameAndPaymentAddress ;
               DUUUUP @sender ;
               GET ;
               IF_NONE { DUUUP @sender ; PUSH string "" ; PAIR %name %paymentAddress } {} ;
               RENAME @recordOfNameAndPaymentAddress ;
               CAR %name ;
               DUUUUUUP @paymentAddress ;
               SWAP ;
               PAIR @newRecordOfNameAndPaymentAddress %name %paymentAddress ;
               DUUUUP @sender ;
               DIP { SOME } ;
               DIIIIP { DROP ; DROP ; DROP } ;
               UPDATE ;
               PAIR @storage %recordsOfNameAndPaymentAddress ;
               NIL operation ;
               PAIR }
             { IF_LEFT
                 { RENAME @_cycle_fee_minimum_slash_17 ;
                   DUUUP @storage ;
                   SENDER @sender ;
                   DUUP @storage ;
                   DUP ;
                   CAR %recordsOfNameAndPaymentAddress ;
                   SWAP ;
                   CDR ;
                   CDR %stamp ;
                   DUUUUP @storage ;
                   CDAR %recordsOfFeeAndMinimum ;
                   DUUUUUP @storage ;
                   CDAR %recordsOfFeeAndMinimum ;
                   DUUUUUP @sender ;
                   GET ;
                   IF_NONE
                     { PUSH (map int (pair :recordOfFeeAndMinimum (int %fee) (mutez %minimum))) {} }
                     {} ;
                   RENAME @recordsOfFeeAndMinimumAsOfCycle ;
                   DUUUUUUUP ;
                   CDDR @minimum ;
                   DUUUUUUUUP ;
                   CDAR @fee ;
                   PAIR @newRecordOfFeeAndMinimum %fee %minimum ;
                   DUUUUUUUUP ;
                   CAR @cycle ;
                   DIP { SOME } ;
                   UPDATE @newRecordsOfFeeAndMinimumAsOfCycle ;
                   DUUUUUP @sender ;
                   DIP { SOME } ;
                   DIIIIIP { DROP ; DROP ; DROP } ;
                   UPDATE ;
                   PAIR %recordsOfFeeAndMinimum %stamp ;
                   SWAP ;
                   PAIR @storage %recordsOfNameAndPaymentAddress ;
                   NIL operation ;
                   PAIR }
                 { RENAME @__slash_28 ;
                   DUUUP @storage ;
                   SENDER @sender ;
                   DUUP @storage ;
                   CDR ;
                   DUUUP @storage ;
                   CAR %recordsOfNameAndPaymentAddress ;
                   DUUUP @sender ;
                   DIP { NONE (pair :recordOfNameAndPaymentAddress (string %name) (address %paymentAddress)) } ;
                   UPDATE ;
                   PAIR @storage %recordsOfNameAndPaymentAddress ;
                   DUP @storage ;
                   DUP ;
                   CAR %recordsOfNameAndPaymentAddress ;
                   SWAP ;
                   CDR ;
                   CDR %stamp ;
                   DUUUP @storage ;
                   CDAR %recordsOfFeeAndMinimum ;
                   DUUUUUP @sender ;
                   DIP { NONE (map int (pair :recordOfFeeAndMinimum (int %fee) (mutez %minimum))) } ;
                   DIIIIIP { DROP ; DROP ; DROP ; DROP } ;
                   UPDATE ;
                   PAIR %recordsOfFeeAndMinimum %stamp ;
                   SWAP ;
                   PAIR @storage %recordsOfNameAndPaymentAddress ;
                   NIL operation ;
                   PAIR } } } ;
       DIP { DROP ; DROP } };