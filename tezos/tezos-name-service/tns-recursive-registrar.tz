# Title: Tezos Name Service Recursive Registrar
# Author: Teckhua Chiang
# Company: Cryptonomic Inc.

parameter
  (or :_entries
     (pair %_Liq_entry_registerDomain string (pair address (pair address int)))
     (or (pair %_Liq_entry_updateRegistrar string address)
         (or (pair %_Liq_entry_updateResolver string address)
             (or (pair %_Liq_entry_updateTTL string int)
                 (or (pair %_Liq_entry_transferOwnership string address)
                     (string %_Liq_entry_deleteDomain))))));
storage
  (pair :storage
     (map %domainToRecord
        string
        (pair :record
           (address %owner)
           (pair (address %registrar) (pair (address %resolver) (int %ttlInSeconds)))))
     (pair (address %registrarOwner) (string %stamp)));
code { DUP ;
       DIP { CDR @storage_slash_1 } ;
       CAR @parameter_slash_2 ;
       DUP @parameter ;
       IF_LEFT
         { RENAME @_domain_registrar_resolver_ttlInSeconds_slash_3 ;
           DUUUP @storage ;
           DUUP ;
           CAR @domain ;
           DUUP @storage ;
           CAR %domainToRecord ;
           DUUP @domain ;
           GET ;
           IF_NONE
             { DUUP @storage ;
               CDAR %registrarOwner ;
               SENDER ;
               COMPARE ;
               EQ ;
               IF { DUUP @storage ;
                    CDR ;
                    DUUUP @storage ;
                    CAR %domainToRecord ;
                    DUUUUUP ;
                    CDDDR @ttlInSeconds ;
                    DUUUUUUP ;
                    CDDAR @resolver ;
                    PAIR %resolver %ttlInSeconds ;
                    DUUUUUUP ;
                    CDAR @registrar ;
                    PAIR %registrar ;
                    SENDER @owner ;
                    PAIR @record %owner ;
                    DUUUUP @domain ;
                    DIP { SOME } ;
                    UPDATE ;
                    PAIR @storage %domainToRecord ;
                    NIL operation ;
                    PAIR }
                  { DUP @domain ;
                    PUSH string "You do not have permission to register that domain: " ;
                    PAIR ;
                    FAILWITH } }
             { DUUP @domain ; PUSH string "Domain is not available: " ; PAIR ; FAILWITH } ;
           DIP { DROP ; DROP ; DROP } }
         { IF_LEFT
             { RENAME @_domain_registrar_slash_13 ;
               DUUUP @storage ;
               DUUP ;
               CAR @domain ;
               DUUP @storage ;
               CAR %domainToRecord ;
               DUUP @domain ;
               GET ;
               IF_NONE
                 { DUP @domain ; PUSH string "Domain does not exist: " ; PAIR ; FAILWITH }
                 { DUUUP @storage ;
                   CDAR %registrarOwner ;
                   SENDER ;
                   COMPARE ;
                   EQ ;
                   IF { DUUUP @storage ;
                        CDR ;
                        DUUUUP @storage ;
                        CAR %domainToRecord ;
                        DUUUP @record ;
                        DUP ;
                        CAR %owner ;
                        SWAP ;
                        CDR ;
                        CDR ;
                        DUUUUUUUUP ;
                        CDR @registrar ;
                        PAIR %registrar ;
                        SWAP ;
                        PAIR @newRecord %owner ;
                        DUUUUUP @domain ;
                        DIP { SOME } ;
                        UPDATE ;
                        PAIR @storage %domainToRecord ;
                        NIL operation ;
                        PAIR }
                      { DUUP @domain ;
                        PUSH string "You do not own that domain: " ;
                        PAIR ;
                        FAILWITH } ;
                   DIP { DROP } } ;
               DIP { DROP ; DROP ; DROP } }
             { IF_LEFT
                 { RENAME @_domain_resolver_slash_20 ;
                   DUUUP @storage ;
                   DUUP ;
                   CAR @domain ;
                   DUUP @storage ;
                   CAR %domainToRecord ;
                   DUUP @domain ;
                   GET ;
                   IF_NONE
                     { DUP @domain ; PUSH string "Domain does not exist: " ; PAIR ; FAILWITH }
                     { DUUUP @storage ;
                       CDAR %registrarOwner ;
                       SENDER ;
                       COMPARE ;
                       EQ ;
                       IF { DUUUP @storage ;
                            CDR ;
                            DUUUUP @storage ;
                            CAR %domainToRecord ;
                            DUUUP @record ;
                            DUP ;
                            CAR %owner ;
                            SWAP ;
                            CDR ;
                            DUP ;
                            CAR %registrar ;
                            SWAP ;
                            CDR ;
                            CDR %ttlInSeconds ;
                            DUUUUUUUUUP ;
                            CDR @resolver ;
                            PAIR %resolver %ttlInSeconds ;
                            SWAP ;
                            PAIR %registrar ;
                            SWAP ;
                            PAIR @newRecord %owner ;
                            DUUUUUP @domain ;
                            DIP { SOME } ;
                            UPDATE ;
                            PAIR @storage %domainToRecord ;
                            NIL operation ;
                            PAIR }
                          { DUUP @domain ;
                            PUSH string "You do not own that domain: " ;
                            PAIR ;
                            FAILWITH } ;
                       DIP { DROP } } ;
                   DIP { DROP ; DROP ; DROP } }
                 { IF_LEFT
                     { RENAME @_domain_ttlInSeconds_slash_27 ;
                       DUUUP @storage ;
                       DUUP ;
                       CAR @domain ;
                       DUUP @storage ;
                       CAR %domainToRecord ;
                       DUUP @domain ;
                       GET ;
                       IF_NONE
                         { DUP @domain ; PUSH string "Domain does not exist: " ; PAIR ; FAILWITH }
                         { DUUUP @storage ;
                           CDAR %registrarOwner ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF { DUUUP @storage ;
                                CDR ;
                                DUUUUP @storage ;
                                CAR %domainToRecord ;
                                DUUUP @record ;
                                DUP ;
                                CAR %owner ;
                                SWAP ;
                                CDR ;
                                DUP ;
                                CAR %registrar ;
                                SWAP ;
                                CDR ;
                                CAR %resolver ;
                                DUUUUUUUUUP ;
                                CDR @ttlInSeconds ;
                                SWAP ;
                                PAIR %resolver %ttlInSeconds ;
                                SWAP ;
                                PAIR %registrar ;
                                SWAP ;
                                PAIR @newRecord %owner ;
                                DUUUUUP @domain ;
                                DIP { SOME } ;
                                UPDATE ;
                                PAIR @storage %domainToRecord ;
                                NIL operation ;
                                PAIR }
                              { DUUP @domain ;
                                PUSH string "You do not own that domain: " ;
                                PAIR ;
                                FAILWITH } ;
                           DIP { DROP } } ;
                       DIP { DROP ; DROP ; DROP } }
                     { IF_LEFT
                         { RENAME @_domain_newOwner_slash_34 ;
                           DUUUP @storage ;
                           DUUP ;
                           CAR @domain ;
                           DUUP @storage ;
                           CAR %domainToRecord ;
                           DUUP @domain ;
                           GET ;
                           IF_NONE
                             { DUP @domain ; PUSH string "Domain does not exist: " ; PAIR ; FAILWITH }
                             { DUUUP @storage ;
                               CDAR %registrarOwner ;
                               SENDER ;
                               COMPARE ;
                               EQ ;
                               IF { DUUUP @storage ;
                                    CDR ;
                                    DUUUUP @storage ;
                                    CAR %domainToRecord ;
                                    DUUUP @record ;
                                    CDR ;
                                    DUUUUUUUP ;
                                    CDR @newOwner ;
                                    PAIR @newRecord %owner ;
                                    DUUUUUP @domain ;
                                    DIP { SOME } ;
                                    UPDATE ;
                                    PAIR @storage %domainToRecord ;
                                    NIL operation ;
                                    PAIR }
                                  { DUUP @domain ;
                                    PUSH string "You do not have permission to transfer that domain: " ;
                                    PAIR ;
                                    FAILWITH } ;
                               DIP { DROP } } ;
                           DIP { DROP ; DROP ; DROP } }
                         { RENAME @domain_slash_41 ;
                           DUUUP @storage ;
                           DUP @storage ;
                           CDAR %registrarOwner ;
                           SENDER ;
                           COMPARE ;
                           EQ ;
                           IF { DUP @storage ;
                                CDR ;
                                DUUP @storage ;
                                CAR %domainToRecord ;
                                DUUUUP @domain ;
                                DIP { NONE (pair :record
                                              (address %owner)
                                              (pair (address %registrar) (pair (address %resolver) (int %ttlInSeconds)))) } ;
                                UPDATE ;
                                PAIR @storage %domainToRecord ;
                                NIL operation ;
                                PAIR }
                              { DUUP @domain ;
                                PUSH string "You do not have permission to delete that domain: " ;
                                PAIR ;
                                FAILWITH } ;
                           DIP { DROP ; DROP } } } } } } ;
       DIP { DROP ; DROP } };